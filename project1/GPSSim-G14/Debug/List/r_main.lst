###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.5.50715 for RL78             19/Feb/2014  19:39:57 #
# Copyright 2011-2013 IAR Systems AB.                                         #
# Network license: ece-lic-19.ece.ncsu.edu (STD)                              #
#                                                                             #
#    Core         =  rl78_2                                                   #
#    Code model   =  Near                                                     #
#    Data model   =  Near                                                     #
#                 =                                                           #
#    Source file  =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\applilet3_src\r_main.c                 #
#    Command line =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\applilet3_src\r_main.c --core rl78_2   #
#                    --code_model near --data_model near                      #
#                    --near_const_location rom0 -o                            #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\Obj\ --dlib_config "C:\Program   #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.5\rl78\LIB\dlrl78nn2n.h" -e -Ohz --no_scheduling       #
#                    --debug -lCN C:\Users\Suddenlink\Dropbox\git_files\embed #
#                    ded_design\project1\GPSSim-G14\Debug\List\ -I            #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/applilet3_src/\ -I                     #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/Glyph/\ -I                             #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/Glyph/Drivers/\ -I                     #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/user_include/\ -I                      #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/RTC/\                                  #
#    List file    =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\List\r_main.lst                  #
#    Object file  =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\Obj\r_main.r87                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Suddenlink\Dropbox\git_files\embedded_design\project1\GPSSim-G14\applilet3_src\r_main.c
      1          /***********************************************************************************************************************
      2          * DISCLAIMER
      3          * This software is supplied by Renesas Electronics Corporation and is only
      4          * intended for use with Renesas products. No other uses are authorized. This
      5          * software is owned by Renesas Electronics Corporation and is protected under
      6          * all applicable laws, including copyright laws.
      7          * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
      8          * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
      9          * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
     10          * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
     11          * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
     12          * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
     13          * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
     14          * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
     15          * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
     16          * Renesas reserves the right, without notice, to make changes to this software
     17          * and to discontinue the availability of this software.  By using this software,
     18          * you agree to the additional terms and conditions found by accessing the
     19          * following link:
     20          * http://www.renesas.com/disclaimer
     21          *
     22          * Copyright (C) 2011, 2013 Renesas Electronics Corporation. All rights reserved.
     23          ***********************************************************************************************************************/
     24          
     25          /***********************************************************************************************************************
     26          * File Name    : r_main.c
     27          * Version      : Applilet3 for RL78/G14 V2.00.00.08 [12 Apr 2013]
     28          * Device(s)    : R5F104PJ
     29          * Tool-Chain   : IAR Systems iccrl78
     30          * Description  : This file implements main function.
     31          * Creation Date: 2/7/2014
     32          ***********************************************************************************************************************/
     33          
     34          /***********************************************************************************************************************
     35          Includes
     36          ***********************************************************************************************************************/
     37          #include "r_cg_macrodriver.h"
     38          #include "r_cg_cgc.h"
     39          #include "r_cg_port.h"
     40          #include "r_cg_serial.h"
     41          #include "r_cg_adc.h"
     42          #include "r_cg_it.h"
     43          /* Start user code for include. Do not edit comment generated here */
     44          #include "lcd.h"
     45          #include "RDKRL78_spi.h"
     46          #include "tasks.h"
     47          #include "rtc_sched.h"
     48          #include "gpssim.h"
     49          /* End user code. Do not edit comment generated here */
     50          #include "r_cg_userdefine.h"
     51          
     52          /***********************************************************************************************************************
     53          Global variables and functions
     54          ***********************************************************************************************************************/
     55          /* Start user code for global. Do not edit comment generated here */
     56          /* End user code. Do not edit comment generated here */
     57          
     58          /* Set option bytes */
     59          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     60          __root const uint8_t opbyte0 = 0xEFU;
   \                     opbyte0:
   \   000000 EF                    DB 239
     61          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     62          __root const uint8_t opbyte1 = 0xFFU;
   \                     opbyte1:
   \   000000 FF                    DB 255
     63          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     64          __root const uint8_t opbyte2 = 0xF8U;
   \                     opbyte2:
   \   000000 F8                    DB 248
     65          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     66          __root const uint8_t opbyte3 = 0x85U;
   \                     opbyte3:
   \   000000 85                    DB 133
     67          
     68          /* Set security ID */
     69          #pragma location = "SECUID"

   \                                 In  segment SECUID, align 2, root
     70          __root const uint8_t secuid[10] =
   \                     secuid:
   \   000000 000000000000          DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
     71              {0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U};
     72          /* Secure trace RAM area */

   \                                 In  segment NEAR_A, at 0xfa300, root
     73          __no_init __root unsigned char ocdtraceram[1024] @ 0xFA300;
   \                     ocdtraceram:
   \   000000                       DS 1024
     74          
     75          void R_MAIN_UserInit(void);
     76          
     77          /***********************************************************************************************************************
     78          * Function Name: main
     79          * Description  : This function implements main function.
     80          * Arguments    : None
     81          * Return Value : None
     82          ***********************************************************************************************************************/

   \                                 In  segment CODE, align 1, keep-with-next
     83          void main(void)
   \                     main:
     84          {
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000 C3                    PUSH      BC                 ;; 1 cycle
   \   000001 C5                    PUSH      DE                 ;; 1 cycle
   \   000002                       ; Auto size: 0
     85              R_MAIN_UserInit();
   \   000002 717AFA                EI                           ;; 2 cycles
     86              /* Start user code. Do not edit comment generated here */
     87          
     88          
     89              R_IT_Start(); 						/* Start interval timer (for RTC_Scheduler) */
   \   000005 FD....                CALL      R_IT_Start         ;; 3 cycles
     90              SPI_Init();               /* LCD SPI initialization */
   \   000008 FD....                CALL      SPI_Init           ;; 3 cycles
     91              LCDInit();              	/* LCD controller initialization*/
   \   00000B FD....                CALL      LCDInit            ;; 3 cycles
     92              R_UART1_Start();          /* Enable UART for transmission */
   \   00000E FD....                CALL      R_UART1_Start      ;; 3 cycles
     93          
     94              LCDFont(FONT_LARGE);
   \   000011 E1                    ONEB      A                  ;; 1 cycle
   \   000012 FD....                CALL      LCDFont            ;; 3 cycles
     95          
     96              Init_RTC_Scheduler();
   \   000015 FD....                CALL      Init_RTC_Scheduler  ;; 3 cycles
     97          
     98              Add_Task(sim_motion, RTC_FREQ_TO_TICKS(1), 1);
   \   000018 E6                    ONEW      AX                 ;; 1 cycle
   \   000019 14                    MOVW      DE, AX             ;; 1 cycle
   \   00001A 32E803                MOVW      BC, #0x3E8         ;; 1 cycle
   \   00001D 30....                MOVW      AX, #sim_motion    ;; 1 cycle
   \   000020 FD....                CALL      Add_Task           ;; 3 cycles
     99          
    100              Run_RTC_Scheduler();
   \   000023 FD....                CALL      Run_RTC_Scheduler  ;; 3 cycles
   \   000026                       ; ------------------------------------- Block: 33 cycles
    101          
    102              while (1U)
   \                     ??main_0:
   \   000026 EFFE                  BR        S:??main_0         ;; 3 cycles
   \   000028                       ; ------------------------------------- Block: 3 cycles
   \   000028                       ; ------------------------------------- Total: 36 cycles
   \   000028                       REQUIRE ?CLRL78_V1_0_L00
    103              {
    104                ;
    105              }
    106              /* End user code. Do not edit comment generated here */
    107          }
    108          
    109          
    110          /***********************************************************************************************************************
    111          * Function Name: R_MAIN_UserInit
    112          * Description  : This function adds user code before implementing main function.
    113          * Arguments    : None
    114          * Return Value : None
    115          ***********************************************************************************************************************/

   \                                 In  segment CODE, align 1, keep-with-next
    116          void R_MAIN_UserInit(void)
   \                     R_MAIN_UserInit:
    117          {
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000                       ; Auto size: 0
    118              /* Start user code. Do not edit comment generated here */
    119              EI();
   \   000000 717AFA                EI                           ;; 2 cycles
    120              /* End user code. Do not edit comment generated here */
    121          }
   \   000003 D7                    RET                          ;; 6 cycles
   \   000004                       ; ------------------------------------- Block: 8 cycles
   \   000004                       ; ------------------------------------- Total: 8 cycles
   \   000004                       REQUIRE ?CLRL78_V1_0_L00
    122          
    123          /* Start user code for adding. Do not edit comment generated here */
    124          /* End user code. Do not edit comment generated here */

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      0   R_MAIN_UserInit
      4   main
        4   -> Add_Task
        4   -> Init_RTC_Scheduler
        4   -> LCDFont
        4   -> LCDInit
        4   -> R_IT_Start
        4   -> R_UART1_Start
        4   -> Run_RTC_Scheduler
        4   -> SPI_Init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  R_MAIN_UserInit
      40  main
    1024  ocdtraceram
       1  opbyte0
       1  opbyte1
       1  opbyte2
       1  opbyte3
      10  secuid

 
    44 bytes in segment CODE
 1 024 bytes in segment NEAR_A
     4 bytes in segment OPTBYTE
    10 bytes in segment SECUID
 
 44 bytes of CODE  memory
 14 bytes of CONST memory
  0 bytes of DATA  memory (+ 1 024 bytes shared)

Errors: none
Warnings: none
