###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.5.50715 for RL78             19/Feb/2014  19:39:57 #
# Copyright 2011-2013 IAR Systems AB.                                         #
# Network license: ece-lic-19.ece.ncsu.edu (STD)                              #
#                                                                             #
#    Core         =  rl78_2                                                   #
#    Code model   =  Near                                                     #
#    Data model   =  Near                                                     #
#                 =                                                           #
#    Source file  =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\user_src\tasks.c                       #
#    Command line =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\user_src\tasks.c --core rl78_2         #
#                    --code_model near --data_model near                      #
#                    --near_const_location rom0 -o                            #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\Obj\ --dlib_config "C:\Program   #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.5\rl78\LIB\dlrl78nn2n.h" -e -Ohz --no_scheduling       #
#                    --debug -lCN C:\Users\Suddenlink\Dropbox\git_files\embed #
#                    ded_design\project1\GPSSim-G14\Debug\List\ -I            #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/applilet3_src/\ -I                     #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/Glyph/\ -I                             #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/Glyph/Drivers/\ -I                     #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/user_include/\ -I                      #
#                    C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14/RTC/\                                  #
#    List file    =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\List\tasks.lst                   #
#    Object file  =  C:\Users\Suddenlink\Dropbox\git_files\embedded_design\pr #
#                    oject1\GPSSim-G14\Debug\Obj\tasks.r87                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Suddenlink\Dropbox\git_files\embedded_design\project1\GPSSim-G14\user_src\tasks.c
      1          #include "r_cg_macrodriver.h"

   \                                 In  segment SADDR_A, at 0xfff04
   \   union <unnamed> volatile __saddr _A_P4
   \                     _A_P4:
   \   000000                       DS 1
      2          #include "r_cg_userdefine.h"
      3          
      4          #include "rtc_sched.h"
      5          #include "lcd.h"
      6          

   \                                 In  segment CODE, align 1, keep-with-next
      7          void Task1(void) {
   \                     Task1:
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000                       ; Auto size: 0
      8          	static char led_state=0;
      9          
     10          	LED_4_G = led_state;
   \   000000 8F....                MOV       A, N:??led_state   ;; 1 cycle
   \   000003 36....                MOVW      HL, #??led_state   ;; 1 cycle
   \   000006 718C                  MOV1      CY, A.0            ;; 1 cycle
   \   000008 712104                MOV1      S:0xFFF04.2, CY    ;; 2 cycles
     11          	led_state ^= 1;
   \   00000B E1                    ONEB      A                  ;; 1 cycle
   \   00000C 7D                    XOR       A, [HL]            ;; 1 cycle
   \   00000D 9B                    MOV       [HL], A            ;; 1 cycle
     12          }
   \   00000E D7                    RET                          ;; 6 cycles
   \   00000F                       ; ------------------------------------- Block: 14 cycles
   \   00000F                       ; ------------------------------------- Total: 14 cycles
   \   00000F                       REQUIRE ?CLRL78_V1_0_L00
   \   00000F                       REQUIRE _A_P4

   \                                 In  segment NEAR_Z, align 1, align-sorted
   \                     ??led_state:
   \   000000                       DS 1
   \   000001                       REQUIRE __INIT_NEAR_Z
     13          

   \                                 In  segment CODE, align 1, keep-with-next
     14          void Task2(void) {
   \                     Task2:
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000                       ; Auto size: 0
     15          	static char led_state=0;
     16          
     17          	LED_6_G = led_state;
   \   000000 8F....                MOV       A, N:??led_state_1  ;; 1 cycle
   \   000003 36....                MOVW      HL, #??led_state_1  ;; 1 cycle
   \   000006 718C                  MOV1      CY, A.0            ;; 1 cycle
   \   000008 713104                MOV1      S:0xFFF04.3, CY    ;; 2 cycles
     18          	led_state ^= 1;
   \   00000B E1                    ONEB      A                  ;; 1 cycle
   \   00000C 7D                    XOR       A, [HL]            ;; 1 cycle
   \   00000D 9B                    MOV       [HL], A            ;; 1 cycle
     19          }
   \   00000E D7                    RET                          ;; 6 cycles
   \   00000F                       ; ------------------------------------- Block: 14 cycles
   \   00000F                       ; ------------------------------------- Total: 14 cycles
   \   00000F                       REQUIRE ?CLRL78_V1_0_L00
   \   00000F                       REQUIRE _A_P4

   \                                 In  segment NEAR_Z, align 1, align-sorted
   \                     ??led_state_1:
   \   000000                       DS 1
   \   000001                       REQUIRE __INIT_NEAR_Z
     20          
     21          // Task3 runs at 1 Hz, updates elapsed time on LCD

   \                                 In  segment CODE, align 1, keep-with-next
     22          void Task3(void) {
   \                     Task3:
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000 C3                    PUSH      BC                 ;; 1 cycle
   \   000001 C5                    PUSH      DE                 ;; 1 cycle
   \   000002                       ; Auto size: 0
     23          	static char led_state=0;
     24          	static unsigned char m=0, s=0;
     25          
     26          	LED_8_G = led_state;
   \   000002 36....                MOVW      HL, #??led_state_2  ;; 1 cycle
   \   000005 7184                  MOV1      CY, [HL].0         ;; 1 cycle
   \   000007 714104                MOV1      S:0xFFF04.4, CY    ;; 2 cycles
     27          	led_state ^= 1;
   \   00000A E1                    ONEB      A                  ;; 1 cycle
   \   00000B 7D                    XOR       A, [HL]            ;; 1 cycle
   \   00000C 9B                    MOV       [HL], A            ;; 1 cycle
     28          
     29          	s++;
   \   00000D A0....                INC       N:??s              ;; 2 cycles
     30          	if (s>59) {
   \   000010 8F....                MOV       A, N:??s           ;; 1 cycle
   \   000013 4C3C                  CMP       A, #0x3C           ;; 1 cycle
   \   000015 DC06                  BC        ??Task3_0          ;; 4 cycles
   \   000017                       ; ------------------------------------- Block: 17 cycles
     31          		m++;
   \   000017 A0....                INC       N:??m              ;; 2 cycles
     32          		s = 0;
   \   00001A F5....                CLRB      N:??s              ;; 1 cycle
   \   00001D                       ; ------------------------------------- Block: 3 cycles
     33          	}
     34          
     35          	LCDPrintf(2,0, "%02u:%02u", m, s);
   \                     ??Task3_0:
   \   00001D 8F....                MOV       A, N:??s           ;; 1 cycle
   \   000020 70                    MOV       X, A               ;; 1 cycle
   \   000021 F1                    CLRB      A                  ;; 1 cycle
   \   000022 C1                    PUSH      AX                 ;; 1 cycle
   \   000023 8F....                MOV       A, N:??m           ;; 1 cycle
   \   000026 70                    MOV       X, A               ;; 1 cycle
   \   000027 F1                    CLRB      A                  ;; 1 cycle
   \   000028 C1                    PUSH      AX                 ;; 1 cycle
   \   000029 34....                MOVW      DE, #`?<Constant "%02u:%02u">`  ;; 1 cycle
   \   00002C F3                    CLRB      B                  ;; 1 cycle
   \   00002D 5102                  MOV       A, #0x2            ;; 1 cycle
   \   00002F FD....                CALL      LCDPrintf          ;; 3 cycles
     36          }
   \   000032 1004                  ADDW      SP, #0x4           ;; 1 cycle
   \   000034 C4                    POP       DE                 ;; 1 cycle
   \   000035 C2                    POP       BC                 ;; 1 cycle
   \   000036 D7                    RET                          ;; 6 cycles
   \   000037                       ; ------------------------------------- Block: 23 cycles
   \   000037                       ; ------------------------------------- Total: 43 cycles
   \   000037                       REQUIRE ?CLRL78_V1_0_L00
   \   000037                       REQUIRE _A_P4

   \                                 In  segment NEAR_Z, align 1, align-sorted
   \                     ??led_state_2:
   \   000000                       DS 1
   \   000001                       REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 1, align-sorted
   \                     ??m:
   \   000000                       DS 1
   \   000001                       REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 1, align-sorted
   \                     ??s:
   \   000000                       DS 1
   \   000001                       REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_CONST, align 2
   \                     `?<Constant "%02u:%02u">`:
   \   000000 253032753A25          DB "%02u:%02u"

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      0   Task1
      0   Task2
      8   Task3
        8   -> LCDPrintf


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      10  ?<Constant "%02u:%02u">
      15  Task1
      15  Task2
      55  Task3
       1  _A_P4
       1  led_state
       1  led_state
       1  led_state
       1  m
       1  s

 
 85 bytes in segment CODE
 10 bytes in segment NEAR_CONST
  5 bytes in segment NEAR_Z
  1 byte  in segment SADDR_A
 
 85 bytes of CODE  memory
 10 bytes of CONST memory
  5 bytes of DATA  memory (+ 1 byte shared)

Errors: none
Warnings: none
